services:
  redis:
    image: redis:7-alpine
    container_name: rag_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - rag_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - rag_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rag_network

  chromadb:
    image: chromadb/chroma:0.4.15
    container_name: chromadb
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_AUTHN_CREDENTIALS=admin:admin
      - CHROMA_SERVER_AUTHN_PROVIDER=token
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - rag_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: rag_bot
    depends_on:
      - redis
      - kafka
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - YANDEX_FOLDER_ID=${YANDEX_FOLDER_ID}
      - YANDEX_API_KEY=${YANDEX_API_KEY}
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./data:/app/data
    networks:
      - rag_network

volumes:
  zk_data:
  zk_log:
  redis_data:
  kafka_data:
  chroma_data:

networks:
  rag_network:
    driver: bridge
